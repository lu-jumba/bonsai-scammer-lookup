'use strict';

function decodeBase64(input) {
    const output = Buffer.from(input, 'base64');
    if (input.length > 0 && output.length === 0) {
        throw new Error('could not decode input');
    }
    return Uint8Array.from(output);
}
function encodeBase64(input) {
    return Buffer.from(input).toString('base64');
}
function decodeBase64UrlSafe(input) {
    let encoded = input.replace('-', '+').replace('_', '/');
    while (encoded.length % 4)
        encoded += '=';
    const output = Buffer.from(encoded, 'base64');
    if (input.length > 0 && output.length === 0) {
        throw new Error('could not decode input');
    }
    return Uint8Array.from(output);
}
function encodeBase64UrlSafe(input) {
    return Buffer.from(input).toString('base64').replace(/\+/g, '-').replace(/\//g, '_').replace(/=+$/, '');
}

exports.decodeBase64 = decodeBase64;
exports.decodeBase64UrlSafe = decodeBase64UrlSafe;
exports.encodeBase64 = encodeBase64;
exports.encodeBase64UrlSafe = encodeBase64UrlSafe;
