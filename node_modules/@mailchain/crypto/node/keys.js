'use strict';

// KindSECP256K1 string identifier for secp256k1 keys.
const KindSECP256K1 = 'secp256k1';
// KindED25519 string identifier for ed25519 keys.
const KindED25519 = 'ed25519';
// KindSECP256R1 string identifier for P256 keys.
const KindSECP256R1 = 'secp256r1';
// KindSR25519 string identifier for sr25519 keys.
const KindSR25519 = 'sr25519';
// KindNoOp string identifier for no-operation keys.
const KindNoOp = 'noop';
// IdSECP256K1 Id identifier for secp256k1 keys.
const IdSECP256K1 = 0xe1;
// IdED25519 Id identifier for ed25519 keys.
const IdED25519 = 0xe2;
// IdSR25519 Id identifier for sr25519 keys.
const IdSR25519 = 0xe3;
// IdSECP256R1 Id identifier for SECP256R1 keys.
const IdSECP256R1 = 0xe4;
// IdNonSpecified Id identifier for non specified secret keys.
const IdNonSpecified = 0xee;
exports.CurveIds = void 0;
(function (CurveIds) {
    CurveIds[CurveIds["SECP256K1"] = 225] = "SECP256K1";
    CurveIds[CurveIds["ED25519"] = 226] = "ED25519";
    CurveIds[CurveIds["SR25519"] = 227] = "SR25519";
    CurveIds[CurveIds["SECP256R1"] = 228] = "SECP256R1";
})(exports.CurveIds || (exports.CurveIds = {}));

exports.IdED25519 = IdED25519;
exports.IdNonSpecified = IdNonSpecified;
exports.IdSECP256K1 = IdSECP256K1;
exports.IdSECP256R1 = IdSECP256R1;
exports.IdSR25519 = IdSR25519;
exports.KindED25519 = KindED25519;
exports.KindNoOp = KindNoOp;
exports.KindSECP256K1 = KindSECP256K1;
exports.KindSECP256R1 = KindSECP256R1;
exports.KindSR25519 = KindSR25519;
