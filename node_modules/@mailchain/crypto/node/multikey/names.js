'use strict';

var keys = require('../keys.js');
var _public$2 = require('../secp256k1/public.js');
var _public$1 = require('../ed25519/public.js');
var _public = require('../secp256r1/public.js');

function kindFromPublicKey(key) {
    switch (key.constructor) {
        case _public$2.SECP256K1PublicKey:
            return keys.KindSECP256K1;
        case _public$1.ED25519PublicKey:
            return keys.KindED25519;
        case _public.SECP256R1PublicKey:
            return keys.KindSECP256R1;
        default:
            throw RangeError('unknown public key type');
    }
}
function publicKeyFromKind(kind, data) {
    switch (kind) {
        case keys.KindSECP256K1:
            return new _public$2.SECP256K1PublicKey(data);
        case keys.KindED25519:
            return new _public$1.ED25519PublicKey(data);
        case keys.KindSECP256R1:
            return new _public.SECP256R1PublicKey(data);
        default:
            throw RangeError('unknown public key type');
    }
}

exports.kindFromPublicKey = kindFromPublicKey;
exports.publicKeyFromKind = publicKeyFromKind;
