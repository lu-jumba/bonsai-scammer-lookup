import { ED25519KeyExchange, PrivateKeyDecrypter, ED25519PrivateKey } from '@mailchain/crypto';

function ecdhKeyRingDecrypter(privateKey) {
    return {
        curve: privateKey.curve,
        sign: (input) => privateKey.sign(input),
        publicKey: privateKey.publicKey,
        ecdhDecrypt: async (bundleEphemeralKey, input) => {
            const keyEx = new ED25519KeyExchange();
            const sharedSecret = await keyEx.SharedSecret(privateKey, bundleEphemeralKey);
            const decrypter = PrivateKeyDecrypter.fromPrivateKey(ED25519PrivateKey.fromSeed(sharedSecret));
            return decrypter.decrypt(input);
        },
    };
}

export { ecdhKeyRingDecrypter };
