'use strict';

var crypto = require('@mailchain/crypto');

function ecdhKeyRingDecrypter(privateKey) {
    return {
        curve: privateKey.curve,
        sign: (input) => privateKey.sign(input),
        publicKey: privateKey.publicKey,
        ecdhDecrypt: async (bundleEphemeralKey, input) => {
            const keyEx = new crypto.ED25519KeyExchange();
            const sharedSecret = await keyEx.SharedSecret(privateKey, bundleEphemeralKey);
            const decrypter = crypto.PrivateKeyDecrypter.fromPrivateKey(crypto.ED25519PrivateKey.fromSeed(sharedSecret));
            return decrypter.decrypt(input);
        },
    };
}

exports.ecdhKeyRingDecrypter = ecdhKeyRingDecrypter;
