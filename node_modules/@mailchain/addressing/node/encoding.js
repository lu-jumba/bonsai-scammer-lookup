'use strict';

var encoding = require('@mailchain/encoding');
var consts = require('./protocols/consts.js');

/**
 * Convert address from Uint8Array, selects the relevant encoding method and encodes it as string.
 */
function encodeAddressByProtocol(address, protocol) {
    const encoding$1 = encodingByProtocol(protocol);
    const encoded = encoding.encode(encoding$1, address);
    return { encoded, encoding: encoding$1 };
}
/**
 * Convert address from string, selects the relevant encoding method and decodes it as Uint8Array.
 */
function decodeAddressByProtocol(address, protocol) {
    const encoding$1 = encodingByProtocol(protocol);
    const decoded = encoding.decode(encoding$1, address);
    return { decoded, encoding: encoding$1 };
}
/**
 * EncodingByProtocol returns the relevant encoding method the protocol commonly uses.
 */
//
function encodingByProtocol(protocol) {
    switch (protocol) {
        case consts.ALGORAND:
            return encoding.EncodingTypes.Base32;
        case consts.ETHEREUM:
            return encoding.EncodingTypes.Hex0xPrefix;
        case consts.SUBSTRATE:
        case consts.TEZOS:
            return encoding.EncodingTypes.Base58;
        case consts.MAILCHAIN:
        case consts.NEAR:
        case consts.FILECOIN:
            return encoding.EncodingTypes.Utf8;
        default:
            throw new Error(`unknown address encoding of [${protocol}]. Supported ${consts.ALL_PROTOCOLS}.`);
    }
}

exports.decodeAddressByProtocol = decodeAddressByProtocol;
exports.encodeAddressByProtocol = encodeAddressByProtocol;
exports.encodingByProtocol = encodingByProtocol;
