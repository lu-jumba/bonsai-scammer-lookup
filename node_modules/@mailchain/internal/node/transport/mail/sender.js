'use strict';

var crypto = require('@mailchain/crypto');
var messagingKeys = require('../../messagingKeys/messagingKeys.js');

class MailSenderVerifier {
    constructor(messagingKeys) {
        Object.defineProperty(this, "messagingKeys", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: messagingKeys
        });
    }
    static create(configuration) {
        return new MailSenderVerifier(messagingKeys.MessagingKeys.create(configuration));
    }
    /**
     *
     * @param fromAddress address that sent the mail. `From:` header in the mail.
     * @param senderMessagingKey public key of the sender.
     * @returns
     */
    async verifySenderOwnsFromAddress(fromAddress, senderMessagingKey) {
        const { data: resolvedSenderMessagingKey, error } = await this.messagingKeys.resolve(fromAddress.address);
        if (error != null) {
            return false;
        }
        return crypto.isPublicKeyEqual(resolvedSenderMessagingKey.messagingKey, senderMessagingKey);
    }
}

exports.MailSenderVerifier = MailSenderVerifier;
