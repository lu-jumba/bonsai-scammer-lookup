import { RegisteredKeyProof, ProvidedKeyProof, MessagingKeysApiInterface } from '@mailchain/api';
import { PublicKey } from '@mailchain/crypto';
import { Configuration } from '../configuration';
export interface VerifyAddressMessagingKeyResult {
    messagingKey: PublicKey;
    identityKey?: PublicKey;
    method: 'provided' | 'registered';
    result: boolean;
}
export declare class MessagingKeyVerifier {
    private readonly messagingKeysApi;
    constructor(messagingKeysApi: MessagingKeysApiInterface);
    static create(configuration: Configuration): MessagingKeyVerifier;
    verifyRegisteredKeyProof(registeredKeyProof: RegisteredKeyProof, messagingKey: PublicKey): Promise<{
        identityKey?: PublicKey;
        result: boolean;
    }>;
    verifyProvidedKeyProof(providedKeyProof: ProvidedKeyProof, messagingKey: PublicKey): Promise<boolean>;
}
