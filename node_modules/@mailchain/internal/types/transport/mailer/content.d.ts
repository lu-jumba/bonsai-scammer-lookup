import { PublicKey } from '@mailchain/crypto';
import { MailerProof } from '@mailchain/signatures';
import { MailAddress } from '../mail';
/**
 * MailerContent is the content that is sent by the Mailer to each recipient.
 */
export type MailerContent = {
    /**
     * The author's messaging public key, this MUST match the messaging key in the final `from` address.
     */
    authorMessagingKey: PublicKey;
    /**
     * Where the content created by the author can be found.
     */
    contentUri: string;
    /**
     * Date message is sent, this will become the Date: header in the email.
     */
    date: Date;
    /**
     * The author's mail address, this must resolve to the author messaging key. The will become the `From:` header in the email.
     */
    authorMailAddress: MailAddress;
    /**
     * Proof created by the author that authorizes the Mailer to send the message.
     */
    mailerProof: MailerProof;
    /**
     * The message ID, this will become the Message-ID: header in the email.
     * This MUST be unique for each message.
     */
    messageId: string;
    /**
     * The recipients of this instance of the message. Typically this will be a single address.
     */
    to: MailAddress[];
    /**
     * The version of the MailerContent, currently only `1.0` is supported.
     */
    version: string;
};
export declare function createContentBuffer(content: MailerContent): string;
export declare function parseMailerContentFromJSON(content: string): MailerContent;
