import { publicKeyToBytes } from '@mailchain/crypto';
import { decodeUtf8, encodeHex } from '@mailchain/encoding';
import { sha3_256 } from '@noble/hashes/sha3';

function createMailchainMessageIdCreator(keyRing) {
    return async (params) => {
        const typeBytes = decodeUtf8(params.type);
        const mailIdBytes = decodeUtf8(params.mailData.id);
        const mailboxBytes = params.type === 'received' ? publicKeyToBytes(params.mailbox) : new Uint8Array();
        const ownerBytes = params.type === 'received' ? decodeUtf8(params.owner) : new Uint8Array();
        return encodeHex(sha3_256(await keyRing
            .rootInboxKey()
            .sign(Uint8Array.from([...typeBytes, ...mailIdBytes, ...mailboxBytes, ...ownerBytes]))));
    };
}

export { createMailchainMessageIdCreator };
