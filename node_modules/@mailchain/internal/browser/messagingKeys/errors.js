class MessagingKeyContactError extends Error {
    constructor(cause) {
        super(`Failed calling messaging key contract.`, { cause });
        Object.defineProperty(this, "type", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'messaging_key_contact_call_error'
        });
        Object.defineProperty(this, "docs", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'https://docs.mailchain.com/developer/errors/codes#messaging_key_contact_call_error'
        });
    }
}
class UnexpectedMailchainError extends Error {
    constructor(message, cause) {
        super(message, { cause });
        Object.defineProperty(this, "type", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'unexpected_error'
        });
        Object.defineProperty(this, "docs", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'https://docs.mailchain.com/developer/errors/codes#unexpected_error'
        });
    }
}
class IdentityExpiredError extends Error {
    constructor() {
        super(`Identity has expired. Check identity provider settings.`);
        Object.defineProperty(this, "type", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'identity_expired'
        });
        Object.defineProperty(this, "docs", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'https://docs.mailchain.com/developer/errors/codes#identity_expired'
        });
    }
}
class IdentityProviderUnsupportedError extends Error {
    constructor() {
        super(`Identity provider is not support. Check list of supported providers.`);
        Object.defineProperty(this, "type", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'identity_provider_unsupported'
        });
        Object.defineProperty(this, "docs", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'https://docs.mailchain.com/developer/errors/codes#identity_provider_unsupported'
        });
    }
}
class IdentityNotFoundError extends Error {
    constructor() {
        super(`Identity is not found. Check address exists on supplied identity provider.`);
        Object.defineProperty(this, "type", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'identity_not_found'
        });
        Object.defineProperty(this, "docs", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'https://docs.mailchain.com/developer/errors/codes#identity_not_found'
        });
    }
}
class IdentityProviderAddressUnsupportedError extends Error {
    constructor() {
        super(`Identity is not supported by the provider. Check identity provider supported addresses.`);
        Object.defineProperty(this, "type", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'identity_provider_address_unsupported'
        });
        Object.defineProperty(this, "docs", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'https://docs.mailchain.com/developer/errors/codes#identity_provider_address_unsupported'
        });
    }
}
class MessagingKeyNotRegisteredError extends Error {
    constructor() {
        super('Messaging key is not registered. Register address, then try again.');
        Object.defineProperty(this, "type", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'messaging_key_unregistered'
        });
        Object.defineProperty(this, "docs", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'https://docs.mailchain.com/developer/errors/codes#messaging_key_unregistered'
        });
    }
}

export { IdentityExpiredError, IdentityNotFoundError, IdentityProviderAddressUnsupportedError, IdentityProviderUnsupportedError, MessagingKeyContactError, MessagingKeyNotRegisteredError, UnexpectedMailchainError };
