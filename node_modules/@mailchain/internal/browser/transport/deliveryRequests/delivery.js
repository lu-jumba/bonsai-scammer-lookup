import { secureRandom } from '@mailchain/crypto';
import { protocol } from '../../protobuf/protocol/protocol.js';
import { createEnvelope } from './envelope.js';

/* eslint-disable @typescript-eslint/naming-convention */
async function createDelivery(recipientMessagingKey, messageRootEncryptionKey, messageURI, rand = secureRandom) {
    const payload = {
        envelope: await createEnvelope(recipientMessagingKey, messageRootEncryptionKey, messageURI, rand),
    };
    const errMsg = protocol.Delivery.verify(payload);
    if (errMsg)
        throw Error(errMsg);
    return protocol.Delivery.create(payload);
}

export { createDelivery };
