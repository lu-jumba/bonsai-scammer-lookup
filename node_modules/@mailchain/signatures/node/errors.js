'use strict';

class ProtocolIsEmptyError extends Error {
    constructor() {
        super('protocol is empty');
    }
}
class AddressIsEmptyError extends Error {
    constructor() {
        super('address is empty');
    }
}
class MessagingKeyVerificationError extends Error {
    constructor() {
        super('Messaging key validation failed and is not useable for this address.');
        Object.defineProperty(this, "type", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'messaging_key_validation_failed'
        });
        Object.defineProperty(this, "docs", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'https://docs.mailchain.com/developer/errors/codes#messaging_key_validation_failed'
        });
    }
}
class SenderMessagingKeyIncorrect extends Error {
    constructor() {
        super('Messaging key is not owner by the sender. Use the latest messaging key owned by sender address.');
        Object.defineProperty(this, "type", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'sender_messaging_key_incorrect'
        });
        Object.defineProperty(this, "docs", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 'https://docs.mailchain.com/developer/errors/codes#sender_messaging_key_incorrect'
        });
    }
}
class AddressMustBeProtocolAddressError extends Error {
    constructor() {
        super('address must be a protocol address');
    }
}
class PublicKeyNotFoundError extends Error {
    constructor() {
        super('mailchain public key not found');
    }
}

exports.AddressIsEmptyError = AddressIsEmptyError;
exports.AddressMustBeProtocolAddressError = AddressMustBeProtocolAddressError;
exports.MessagingKeyVerificationError = MessagingKeyVerificationError;
exports.ProtocolIsEmptyError = ProtocolIsEmptyError;
exports.PublicKeyNotFoundError = PublicKeyNotFoundError;
exports.SenderMessagingKeyIncorrect = SenderMessagingKeyIncorrect;
