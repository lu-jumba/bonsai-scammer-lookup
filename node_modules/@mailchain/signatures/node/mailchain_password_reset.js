'use strict';

var raw_ed25519 = require('./raw_ed25519.js');

const mailchainPasswordResetMessage = function (username, expires) {
    return Buffer.from(`\x11Mailchain:\naction: reset-password\nexpires: ${Math.floor(expires.getTime() / 1000)}\nusername: ${username}`, 'utf-8');
};
/**
 * Signs a message using the Mailchain username, reset attestation message, and expiration with the identity private key.
 */
async function signMailchainPasswordReset(signer, username, expires) {
    return raw_ed25519.signRawEd25519(signer, mailchainPasswordResetMessage(username, expires));
}
/**
 * Verifies message linking a username, reset attestation message, and expiration with an identity key is valid.
 */
async function verifyMailchainPasswordReset(key, signature, username, expires) {
    return raw_ed25519.verifyRawEd25519(key, mailchainPasswordResetMessage(username, expires), signature);
}

exports.mailchainPasswordResetMessage = mailchainPasswordResetMessage;
exports.signMailchainPasswordReset = signMailchainPasswordReset;
exports.verifyMailchainPasswordReset = verifyMailchainPasswordReset;
