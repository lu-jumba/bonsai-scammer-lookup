import { decodeUtf8 } from '@mailchain/encoding';
import { KindTezos, KindRawED25519, KindEthereumPersonalMessage } from './consts.js';
import { verifyEthereumPersonalMessage } from './eth_personal.js';
import { verifyRawEd25519 } from './raw_ed25519.js';
import { verifyTezosSignedMessage } from './tezos_micheline.js';

function verify(signingMethod, verifyingKey, message, signature) {
    switch (signingMethod) {
        case KindEthereumPersonalMessage:
            return verifyEthereumPersonalMessage(verifyingKey, decodeUtf8(message), signature);
        case KindRawED25519:
            return verifyRawEd25519(verifyingKey, decodeUtf8(message), signature);
        case KindTezos:
            return verifyTezosSignedMessage(verifyingKey, message, signature);
        default:
            throw new Error();
    }
}

export { verify };
