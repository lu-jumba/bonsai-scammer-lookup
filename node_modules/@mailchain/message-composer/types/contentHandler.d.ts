import { ContentPart, StringHeader } from './types';
import { MessageComposerContext } from './messageComposerContext';
export type BuiltContentPart = string | {
    boundaryHeader: StringHeader;
    content: string;
};
export declare function buildMessageAndAttachments(messageParts: ContentPart[], attachmentParts: ContentPart[], ctx: MessageComposerContext): Promise<BuiltContentPart>;
export declare function buildContentParts(parts: ContentPart[], forceMultipart: true, ctx: MessageComposerContext): Promise<{
    boundary: string;
    parts: string;
}>;
export declare function buildContentParts(parts: ContentPart[], forceMultipart: false, ctx: MessageComposerContext): Promise<string | {
    boundary: string;
    parts: string;
}>;
export declare function buildContentPart({ content, headers }: ContentPart, ctx: MessageComposerContext): Promise<string>;
