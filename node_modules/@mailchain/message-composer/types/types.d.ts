/// <reference types="node" />
export type Address = {
    name?: string;
    address: string;
};
export type MessageIds = {
    type: 'message-ids';
    ids: string[];
};
/**
 * Define single attribute of a header. First element is the `key` and the second is the `value`. A attribute is not required to have a key.
 */
export type HeaderAttribute = [string | undefined, string];
export type Header<T> = {
    label: string;
    value: T;
    attrs?: HeaderAttribute[];
};
export type StringHeader = Header<string>;
export declare function isStringHeader(header: Header<any>): header is StringHeader;
export type DateHeader = Header<Date>;
export declare function isDateHeader(header: Header<any>): header is DateHeader;
export type AddressHeader = Header<Address[]>;
export declare function isAddressHeader(header: Header<any>): header is AddressHeader;
export type MessageIdsHeader = Header<MessageIds>;
export declare function isMessageIdHeader(header: Header<any>): header is MessageIdsHeader;
export type ContentPart = {
    headers: Header<any>[];
    content: string | Buffer;
};
export type Attachment = {
    /**
     * Value for the Content-ID header.
     *
     * Unique identifier for the attachment that can be used to reference it to embed it into the content of the mail content.
     */
    cid: string;
    /** The name of the attachment.  */
    filename: string;
    /** `Base64` encoded value of the bytes or just `Buffer` from it. */
    content: string | Buffer;
    /**
     * The MIME content type of the attachment.
     *
     * Example: For a textual file `"file.txt"` the content type would be `"text/plain"`.
     *
     * More common types: https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types
     */
    contentType: string;
};
