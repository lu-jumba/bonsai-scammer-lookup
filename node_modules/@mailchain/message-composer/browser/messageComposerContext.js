import { decodeUtf8, encodeBase64UrlSafe, encodeBase64 } from '@mailchain/encoding';

function defaultMessageComposerContext() {
    return {
        random: (len) => typeof crypto !== 'undefined'
            ? Promise.resolve(crypto.getRandomValues(new Uint8Array(len)))
            : import('./_virtual/_polyfill-node.crypto.js').then(({ webcrypto }) => webcrypto.getRandomValues(new Uint8Array(len))),
        decodeUtf8: (content) => Promise.resolve(decodeUtf8(content)),
        encodeBase64: (content, urlSafe) => urlSafe ? Promise.resolve(encodeBase64UrlSafe(content)) : Promise.resolve(encodeBase64(content)),
    };
}

export { defaultMessageComposerContext };
